package com.kotleters.mobile.feature.company.presentation.anal

import com.kotleters.mobile.common.domain.Lacuna
import com.kotleters.mobile.feature.company.domain.entity.Statistic
import com.kotleters.mobile.feature.company.presentation.anal.model.LacunaUI
import kotlinx.serialization.json.Json

fun parseResponse(responseText: String): List<LacunaUI> {
    return Json.decodeFromString(responseText)
}

fun buildPrompt(lacunas: List<Lacuna>): String {
    val problems = lacunas.joinToString("\n") {
        "- –ü—Ä–æ–±–ª–µ–º–∞: ${it.text}, —Å—Ä–µ–¥–Ω–∏–µ —Ç—Ä–∞—Ç—ã: ${it.averageSpent} —Ä—É–±."
    }
    return """
            –£ –º–µ–Ω—è –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–±–ª–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∏—Ö —Å—Ä–µ–¥–Ω–∏–º–∏ –µ–∂–µ–º–µ—Å—è—á–Ω—ã–º–∏ —Ç—Ä–∞—Ç–∞–º–∏. 
            –ù—É–∂–Ω–æ —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Ö–æ–∂–∏–µ –ø—Ä–æ–±–ª–µ–º—ã, —Å–æ–∑–¥–∞—Ç—å –∏—Ö –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å—Ä–µ–¥–Ω–∏–π –¥–æ—Ö–æ–¥ –¥–ª—è –≥—Ä—É–ø–ø—ã.
            
            –í–æ—Ç —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–±–ª–µ–º:
            $problems

            –í–µ—Ä–Ω–∏ JSON –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ —Å –ø–æ–ª—è–º–∏:
            - headline (–∫—Ä–∞—Ç–∫–æ –∫–∞–∫ –º–æ–∂–Ω–æ —ç—Ç–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ —Å–≤–æ–µ–º –±–∏–∑–Ω–µ—Å–µ —á—Ç–æ–± –∑–∞–∫—Ä—ã—Ç—å —ç—Ç—É –¥—ã—Ä—É –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫—É—é)
            - description (–∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ)
            - income (—Å—É–º–º–∞ —Å—Ä–µ–¥–Ω–∏—Ö —Ç—Ä–∞—Ç –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —ç—Ç–æ–π –ø—Ä–æ–±–ª–µ–º–æ–π).
            
            –ü—Ä–∏–º–µ—Ä JSON-–æ—Ç–≤–µ—Ç–∞:
            [
                {
                    "headline": "–°–¥–µ–ª–∞—Ç—å —Ü–µ–Ω—ã –ø–æ–Ω–∏–∂–µ",
                    "description": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∂–∞–ª—É—é—Ç—Å—è, —á—Ç–æ —É –Ω–∏—Ö —É—Ö–æ–¥–∏—Ç —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –¥–µ–Ω–µ–≥ –Ω–∞ –ø–∏—Ç–∞–Ω–∏–µ.",
                    "income": 15000.0
                }
            ]
            –ü–ò–®–ò –°–†–ê–ó–£ –û–ë–™–ï–ö–¢ JSON
            –ù–ê–ß–ò–ù–ê–ô –° [ –ó–ê–ö–ê–ù–ß–ò–í–ê–ô –ù–ê ]
        """.trimIndent()
}

fun generateStatisticsPrompt(statistics: List<Statistic>): String {
    if (statistics.isEmpty()) return "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞."

    val totalStats = statistics.fold(
        Statistic.Year(
            monthStart = statistics.first().year.monthStart,
            monthFinish = statistics.last().year.monthFinish,
            allAmount = 0,
            maleAmount = 0,
            femaleAmount = 0,
            kidsAmount = 0,
            youngAmount = 0,
            middleAmount = 0,
            oldAmount = 0
        )
    ) { acc, stat ->
        acc.copy(
            allAmount = acc.allAmount + stat.year.allAmount,
            maleAmount = acc.maleAmount + stat.year.maleAmount,
            femaleAmount = acc.femaleAmount + stat.year.femaleAmount,
            kidsAmount = acc.kidsAmount + stat.year.kidsAmount,
            youngAmount = acc.youngAmount + stat.year.youngAmount,
            middleAmount = acc.middleAmount + stat.year.middleAmount,
            oldAmount = acc.oldAmount + stat.year.oldAmount
        )
    }

    return """
        –ê–Ω–∞–ª–∏–∑ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –∞–∫—Ü–∏–π –∫–æ–º–ø–∞–Ω–∏–∏:
        
        üìÖ –ü–µ—Ä–∏–æ–¥: ${totalStats.monthStart} ‚Äì ${totalStats.monthFinish}
        üî¢ –í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π: ${totalStats.allAmount}
        üë® –ú—É–∂—á–∏–Ω—ã: ${totalStats.maleAmount} (${(totalStats.maleAmount * 100.0 / totalStats.allAmount).toInt()}%)
        üë© –ñ–µ–Ω—â–∏–Ω—ã: ${totalStats.femaleAmount} (${(totalStats.femaleAmount * 100.0 / totalStats.allAmount).toInt()}%)
        üë∂ –î–µ—Ç–∏: ${totalStats.kidsAmount} (${(totalStats.kidsAmount * 100.0 / totalStats.allAmount).toInt()}%)
        üßë –ú–æ–ª–æ–¥–µ–∂—å: ${totalStats.youngAmount} (${(totalStats.youngAmount * 100.0 / totalStats.allAmount).toInt()}%)
        üë®‚Äçü¶≥ –°—Ä–µ–¥–Ω–∏–π –≤–æ–∑—Ä–∞—Å—Ç: ${totalStats.middleAmount} (${(totalStats.middleAmount * 100.0 / totalStats.allAmount).toInt()}%)
        üßì –ü–æ–∂–∏–ª—ã–µ: ${totalStats.oldAmount} (${(totalStats.oldAmount * 100.0 / totalStats.allAmount).toInt()}%)

        –í—ã—è–≤–∏—Ç–µ –∫–ª—é—á–µ–≤—ã–µ —Ç—Ä–µ–Ω–¥—ã, –≤—ã—è–≤–∏—Ç–µ —Å–ª–∞–±—ã–µ –∏ —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã –∞–∫—Ü–∏–π. –î–∞–π—Ç–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é.
    """.trimIndent()
}
